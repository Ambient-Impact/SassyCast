@include test('to-list(..)') {
  $tests: (
    1: ('value': (1,), 'type': 'list'),
    42: ('value': (42,), 'type': 'list'),
    -42: ('value': (-42,), 'type': 'list'),
    -4.2: ('value': (-4.2,), 'type': 'list'),
    4.2: ('value': (4.2,), 'type': 'list'),
    42em: ('value': (42em,), 'type': 'list'),
    -42em: ('value': (-42em,), 'type': 'list'),
    -4.2em: ('value': (-4.2em,), 'type': 'list'),
    4.2em: ('value': (4.2em,), 'type': 'list'),
    '': ('value': ('',), 'type': 'list'),
    'string': ('value': ('string',), 'type': 'list'),
    'this is a string': ('value': ('this is a string',), 'type': 'list'),
    'true': ('value': ('true',), 'type': 'list'),
    'false': ('value': ('false',), 'type': 'list'),
    '0': ('value': ('0',), 'type': 'list'),
    '-0': ('value': ('-0',), 'type': 'list'),
    '1': ('value': ('1',), 'type': 'list'),
    '42': ('value': ('42',), 'type': 'list'),
    '4.2': ('value': ('4.2',), 'type': 'list'),
    '-42': ('value': ('-42',), 'type': 'list'),
    '-4.2': ('value': ('-4.2',), 'type': 'list'),
    '42em': ('value': ('42em',), 'type': 'list'),
    '4.2em': ('value': ('4.2em',), 'type': 'list'),
    '-42em': ('value': ('-42em',), 'type': 'list'),
    '-4.2em': ('value': ('-4.2em',), 'type': 'list'),
    '#000': ('value': ('#000',), 'type': 'list'),
    '#000000': ('value': ('#000000',), 'type': 'list'),
    'black': ('value': ('black',), 'type': 'list'),
    'rgb(0,0,0)': ('value': ('rgb(0,0,0)',), 'type': 'list'),
    'rgba(0,0,0,.5)': ('value': ('rgba(0,0,0,.5)',), 'type': 'list'),
    'hsl(0,0,0)': ('value': ('hsl(0,0,0)',), 'type': 'list'),
    'hsla(0,0,0, .5)': ('value': ('hsla(0,0,0, .5)',), 'type': 'list'),
    #000: ('value': (#000,), 'type': 'list'),
    #ffffff: ('value': (#ffffff,), 'type': 'list'),
    red: ('value': (red,), 'type': 'list'),
    rgb(10, 20, 30): ('value': (rgb(10, 20, 30),), 'type': 'list'),
    rgba(30, 20, 10, 0.5): ('value': (rgba(30, 20, 10, 0.5),), 'type': 'list'),
    hsl(10, 20, 30): ('value': (hsl(10, 20, 30),), 'type': 'list'),
    hsla(30, 20, 10, 0.5): ('value': (hsla(30, 20, 10, 0.5),), 'type': 'list'),
    true: ('value': (true,), 'type': 'list'),
    false: ('value': (false,), 'type': 'list'),
    (this, is, a, list): ('value': (this, is, a, list), 'type': 'list'),
    (this is a list): ('value': (this is a list), 'type': 'list'),
    ('a': 1, 'b': 2): ('value': ('a' 1, 'b' 2), 'type': 'list'),
    null: ('value': (null,), 'type': 'list'),
  );

  @each $test, $expect in $tests {
    $actual-value: to-list($test);
    $actual-type: type-of($actual-value);

    $expected-value: map-get($expect, 'value');
    $expected-type: map-get($expect, 'type');

    @include assert-equal($actual-value, $expected-value, 'Cast to list.');
    @include assert-equal($actual-type, $expected-type, 'Cast to list.');
  }
}
